import logging
from telegram import Update
from telegram.ext import Application, CommandHandler, MessageHandler, ContextTypes, filters
import asyncio
import nest_asyncio

BOT_TOKEN = "7990044460:AAFMYiXyWzeGDZoiEK1iIQi6cDA61hFcEPc"
OWNER_ID = 2077750894  # –ó–∞–º–µ–Ω–∏ –Ω–∞ —Å–≤–æ–π Telegram ID

# –ê–∫—Ç–∏–≤–∞—Ü–∏—è nest_asyncio
nest_asyncio.apply()

logging.basicConfig(level=logging.INFO)

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("üëã –ü—Ä–∏–≤–µ—Ç! –≠—Ç–æ –∞–Ω–æ–Ω–∏–º–Ω—ã–π –±–æ—Ç.\n\n–û—Ç–ø—Ä–∞–≤—å —Å—é–¥–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ ‚Äî –∏ –æ–Ω–æ –±—É–¥–µ—Ç –¥–æ—Å—Ç–∞–≤–ª–µ–Ω–æ!")

async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user = update.message.from_user
    text = update.message.text

    if user.id == OWNER_ID:
        if context.user_data.get("reply_to"):
            original_user_id = context.user_data.pop("reply_to")
            try:
                await context.bot.send_message(chat_id=original_user_id, text=f"‚úâÔ∏è –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç @x771:\n{text}")
                await update.message.reply_text("‚úÖ –û—Ç–≤–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω.")
            except Exception as e:
                await update.message.reply_text("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ.")
        else:
            await update.message.reply_text("‚ùóÔ∏è–ù–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –æ—Ç–≤–µ—Ç–∞.")
    else:
        msg = (
            f"üì® –ù–æ–≤–æ–µ –∞–Ω–æ–Ω–∏–º–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ:\n\n"
            f"{text}\n\n"
            f"üë§ @{user.username if user.username else '–ë–µ–∑ username'}"
        )
        await context.bot.send_message(chat_id=OWNER_ID, text=msg)
        context.user_data["reply_to"] = user.id
        await update.message.reply_text("‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!")

async def main():
    app = Application.builder().token(BOT_TOKEN).build()

    app.add_handler(CommandHandler("start", start))
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))

    print("ü§ñ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω. –û–∂–∏–¥–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è...")
    await app.run_polling()

if __name__ == "__main__":
    asyncio.run(main())
