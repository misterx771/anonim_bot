import logging
from telegram import Update
from telegram.ext import (
    Application, CommandHandler, MessageHandler,
    ContextTypes, filters
)
import asyncio
import nest_asyncio

nest_asyncio.apply()

# üîë –¢–æ–∫–µ–Ω –±–æ—Ç–∞
BOT_TOKEN = "7990044460:AAFMYiXyWzeGDZoiEK1iIQi6cDA61hFcEPc"

# üë§ –ê–π–¥–∏ –≤–ª–∞–¥–µ–ª—å—Ü–∞ (—Ç–µ–±—è)
OWNER_ID = 2077750894  # –∑–∞–º–µ–Ω–∏ –Ω–∞ —Å–≤–æ–π Telegram ID

# –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(level=logging.INFO)

# /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("üëã –ü—Ä–∏–≤–µ—Ç! –≠—Ç–æ –∞–Ω–æ–Ω–∏–º–Ω—ã–π –±–æ—Ç. –ù–∞–ø–∏—à–∏ —Å—é–¥–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ!")

# –í—Å–µ —Ç–µ–∫—Å—Ç–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user = update.message.from_user
    text = update.message.text

    if user.id == OWNER_ID:
        if context.user_data.get("reply_to"):
            target_id = context.user_data.pop("reply_to")
            await context.bot.send_message(
                chat_id=target_id,
                text=f"üí¨ –û—Ç–≤–µ—Ç –æ—Ç @x771:\n\n{text}"
            )
            await update.message.reply_text("‚úÖ –û—Ç–≤–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω.")
        else:
            await update.message.reply_text("‚ö†Ô∏è –ù–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –∞–Ω–æ–Ω–∏–º–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.")
    else:
        context.user_data["reply_to"] = user.id
        username = f"@{user.username}" if user.username else "‚ùå –Ω–µ—Ç username"
        await context.bot.send_message(
            chat_id=OWNER_ID,
            text=f"üì© –ù–æ–≤–æ–µ –∞–Ω–æ–Ω–∏–º–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ:\n\n{text}\n\nüë§ {username}"
        )
        await update.message.reply_text("‚úÖ –í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!")

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
async def main():
    app = Application.builder().token(BOT_TOKEN).build()

    app.add_handler(CommandHandler("start", start))
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))

    print("ü§ñ –ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç...")
    await app.run_polling()

# –ó–∞–ø—É—Å–∫ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–≥–æ —Ü–∏–∫–ª–∞
if __name__ == "__main__":
    asyncio.run(main())
